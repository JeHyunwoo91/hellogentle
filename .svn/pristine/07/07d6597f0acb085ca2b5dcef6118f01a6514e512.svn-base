var async = require('async'),
	fstools = require('fs-tools'),
	path = require('path'),
	formidable = require('formidable'), // file upload시, form-data를 파싱하기 위해
	logger = require('../configue/logger');

// process 예외 발생시 처리
process.on('uncaughtException', function(err){
	console.log('Caught exception at hello_gentle: '+err);
});

exports.processUploadFiles = function processUploadFiles(req, callback) {
	var form = new formidable.IncomingForm(); // incomming form 생성
	form.uploadDir = path.normalize(__dirname+"/../uploads/");
	form.keepExtensions = true; // 확장자를 포함한 파일을 uploaddir에 쓰고 싶음
	form.multiples = true; // form.parse를 호출할때 매개변수로 배열을 허용함
	
	var result = {
		uploadFiles : [],
		formFields : {}
	};
	
	form.on('field', function(name, value){
		if (!result.formFields[name]) { // 해당 name이 존재하지 않을때(최초)
			result.formFields[name] = value;
		} else {
			if (result.formFields[name] instanceof Array) { // 해당 name이 배열일시
				result.formFields[name].push(value);
			} else { // 해당 name이 배열이 아닐시
				var temp = result.formFields[name];
				result.formFields[name] = []; // 배열화
				result.formFields[name].push(temp);
				result.formFields[name].push(value);
			}
		}
	});

	form.parse(req, function(err, fields, files) {
		
		/**
		 * prof_img : 회원 프로필 이미지
		 */
		// body의 파일 형식에 prof_img에 해당하는 value가 존재하지 않을때(기존의 회원이 프로필 이미지를 가졋을때에도 해당)
		if (!files.prof_img) { 
			callback(null, result, req.user.prof_img);
		} else { // body의 파일 형식에 prof_img가 존재할때(기존 prof_img에서 변경됨)
			var destPath = path.normalize(__dirname+'/../images/profile/'+path.basename(files.prof_img.path));
			fstools.move(files.prof_img.path, destPath, function(err){
				if (err) {
					callback(err);
				} else {
					logger.debug(files.prof_img.name+'->'+path.basename(files.prof_img.path));
					 // callback으로 body의 fields 정보와 uuid로 적용된 사진 파일 경로를 넘겨준다
					callback(null, result, path.basename(files.prof_img.path));
				}
			});
		}
	});
};